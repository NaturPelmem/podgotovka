//JavaScript метод document querySelector() возвращает первый элемент в документе (объект
    // Element), соответствующий указанному селектору, или группе селекторов. Если совпадений не
    // найдено, то возвращается значение null.
    //Находим элемент с классом show-more и записываем его в константу show-more. Значение
    // констант не может быть изменено новым присваиванием, а также не может быть переопределено.
    // Константы (const) подчиняются области видимости уровня блока.
    const showMore = document.querySelector('.show-more');
    //Метод querySelectorALL()возвращает все элементы, соответствующие селектору (селекторам)
    // CSS.
    //. length-длина массива
    //Находим в документе все элементы с классом products-griditem и определяем длину массива
    // этих элементов, записваем ее в переменную productsLength
    const productsLength = document.querySelectorAll('.products-grid__item').length;
    //Начальный элемент от которого будем прибавлять карточки
    let items = 8;
    //При нажатии на кнопку Посмотреть ещё
    showMore.addEventListener('click', () => {
    // Увеличиваем начальное количество элементов на 4, то есть подгружаем 4 карточки
    items += 4;
    /*Функция Array.from() создаёт новый массив на основе переданного объекта. Объект должен быть
    либо массивоподобным (как строка или объект arguments), либо итерируемым (как Set или Мар).
    Функция Array.from() принимает три аргумента, последние два из которых не обязательны:
    -Объект, на основе которого создаётся массив.
    -Функция преобразования элемента перед его добавлением в массив. Работает как метод тар().
    -Значение, которое будет использоваться как this 6 функции из второго параметра.
    Возвращает новый массив, составленный из элементов переданного объекта. */
    // Ищем дочерние элементы и записываем их в массив
    const array = Array.from(document.querySelector('.products-grid').children);
    //Array.slice не изменяет исходный массив. Он просто возвращает новый массив элементов,
    // который является подмножеством исходного массива.Метод slice() возвращает новый массив,
    // содержащий копию части исходного массива.
    const visItems = array.slice(0, items);
    //Свойство classList даёт возможность просматривать и манипулировать классами элемента, в
    // данном случае добавляем класс is-visible
    visItems.forEach(el => el.classList.add('is-visible'));
    //0ператор строгого равенства === проверяет равенство без приведения типов. Другими словами,
    // если а и b имеют разные типы, то проверка а === b немедленно возвращает fal.se без попытки их
    // преобразования
    //Проверяем условие, если длина полученного массива равна длине массива со всеми элементами,
    // то прячем кнопку Показать еще
    if (visItems.length === productsLength) {
    showMore.style.display = 'none';
    }
});